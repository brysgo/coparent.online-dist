(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[542],{4944:(e,t,i)=>{"use strict";i.d(t,{k:()=>a});var s=i(5155),n=i(2115),r=i(9434);let a=n.forwardRef((e,t)=>{let{className:i,value:n=0,...a}=e;return(0,s.jsx)("div",{ref:t,className:(0,r.cn)("relative h-4 w-full overflow-hidden rounded-full bg-gray-200",i),...a,children:(0,s.jsx)("div",{className:"h-full bg-blue-600 transition-all duration-300 ease-in-out",style:{width:"".concat(Math.min(100,Math.max(0,n)),"%")}})})});a.displayName="Progress"},6427:(e,t,i)=>{Promise.resolve().then(i.bind(i,7361))},7361:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>x});var s=i(5155),n=i(2115),r=i(4853),a=i(8505);class l{getNextRequiredComparison(){return(this.propagateInferences(),this.canInferCompleteOrdering())?null:this.selector.selectNextOptimalComparison()}recordComparison(e){let t=this.getNextRequiredComparison();if(!t)return 0;this.manualComparisons.push({pair:t,winner:e});let i=this.transitivity.addComparison(t.left,t.right,e);return this.selector.updateItems(this.items),i}canInferCompleteOrdering(){let e=this.transitivity.getUnknownPairs(this.items);if(0===e.length)return!0;let t=this.items.length*(this.items.length-1)/2;return(t-e.length)/t>=.7}getKnownRelationships(){let e=[];for(let t=0;t<this.items.length;t++)for(let i=t+1;i<this.items.length;i++){let s=this.items[t],n=this.items[i],r=this.transitivity.getRelationship(s,n);"greater"===r?e.push({item1:s,item2:n,relationship:"greater"}):"less"===r&&e.push({item1:s,item2:n,relationship:"less"})}return e}getInferenceStats(){let e=this.items.length*(this.items.length-1)/2,t=this.getKnownRelationships().length,i=this.manualComparisons.length;return{manualComparisons:i,inferredRelationships:Math.max(0,t-i),totalRelationships:t,completionPercentage:e>0?t/e*100:100,efficiencyGain:Math.max(0,e>0?(e-i)/e*100:0)}}isInferenceComplete(){return null===this.getNextRequiredComparison()}getTheoreticalMinimum(){let e=this.items.length;return e<=1?0:e-1}exportState(){return{items:this.items,comparisons:this.manualComparisons.map(e=>({left:e.pair.left.id,right:e.pair.right.id,winner:e.winner.id}))}}importState(e){for(let t of(this.items=[...e.items],this.transitivity.initialize(this.items),this.selector.updateItems(this.items),this.manualComparisons=[],e.comparisons)){let e=this.items.find(e=>e.id===t.left),i=this.items.find(e=>e.id===t.right),s=this.items.find(e=>e.id===t.winner);e&&i&&s&&(this.manualComparisons.push({pair:{left:e,right:i},winner:s}),this.transitivity.addComparison(e,i,s))}}reset(e){this.items=[...e],this.transitivity.initialize(this.items),this.selector.updateItems(this.items),this.manualComparisons=[]}propagateInferences(){}constructor(e){this.items=[...e],this.transitivity=new r.u,this.selector=new a.Z(this.transitivity,this.items),this.manualComparisons=[],this.transitivity.initialize(this.items)}}class o{sort(){let e=this.inferrer.getKnownRelationships(),t=this.inferrer.exportState().items;return this.inferrer.canInferCompleteOrdering()?this.topologicalSort(t,e):this.scoringBasedSort(t,e)}topologicalSort(e,t){var i,s,n;let r=[],a=new Set(e),l=new Map;for(let t of e)l.set(t.id,new Set);for(let e of t)"greater"===e.relationship?null==(i=l.get(e.item1.id))||i.add(e.item2.id):null==(s=l.get(e.item2.id))||s.add(e.item1.id);for(;a.size>0;){let e=null;for(let t of a){let i=!0;for(let e of a)if(t!==e&&(null==(n=l.get(e.id))?void 0:n.has(t.id))){i=!1;break}if(i){e=t;break}}e||(e=a.values().next().value||null),e&&(r.push(e),a.delete(e))}return r}scoringBasedSort(e,t){let i=new Map;for(let t of e)i.set(t.id,0);for(let e of t)"greater"===e.relationship?i.set(e.item1.id,(i.get(e.item1.id)||0)+1):i.set(e.item2.id,(i.get(e.item2.id)||0)+1);return e.map((e,t)=>({item:e,score:i.get(e.id)||0,originalIndex:t})).sort((e,t)=>e.score!==t.score?t.score-e.score:e.originalIndex-t.originalIndex).map(e=>e.item)}getSortingConfidence(){let e,t,i=this.inferrer.getInferenceStats(),s=this.inferrer.exportState().items.length*(this.inferrer.exportState().items.length-1)/2-i.totalRelationships;return this.inferrer.canInferCompleteOrdering()?(e=95,t="Complete ordering can be inferred from known relationships"):i.completionPercentage>=70?(e=80,t="Most relationships known, high confidence in ordering"):i.completionPercentage>=50?(e=60,t="Partial relationships known, moderate confidence"):(e=30,t="Limited relationships known, low confidence in ordering"),{confidence:e,reason:t,missingRelationships:s}}validateSortedOrder(e){let t=this.inferrer.getKnownRelationships(),i=[],s=new Map;for(let n of(e.forEach((e,t)=>{s.set(e.id,t)}),t)){let e=s.get(n.item1.id),t=s.get(n.item2.id);void 0!==e&&void 0!==t&&("greater"===n.relationship&&e>t?i.push({item1:n.item1,item2:n.item2,expectedRelationship:"".concat(n.item1.label," should come before ").concat(n.item2.label)}):"less"===n.relationship&&e<t&&i.push({item1:n.item1,item2:n.item2,expectedRelationship:"".concat(n.item1.label," should come after ").concat(n.item2.label)}))}return{isValid:0===i.length,violations:i}}constructor(e){this.inferrer=e}}var d=i(6695),c=i(285),m=i(4944);function h(e){let{items:t}=e,[i,r]=(0,n.useState)(null),[a,h]=(0,n.useState)(null),[x,u]=(0,n.useState)(null),[g,p]=(0,n.useState)(null),[f,j]=(0,n.useState)([]),[v,b]=(0,n.useState)(!1),[N,y]=(0,n.useState)([]),[w,C]=(0,n.useState)("inference"),[k,S]=(0,n.useState)(null),[R,I]=(0,n.useState)(""),[D,P]=(0,n.useState)(null),B=t||[{id:"weekend",label:"Weekend Custody",description:"Having kids on weekends"},{id:"weekday",label:"Weekday Custody",description:"Having kids on weekdays"},{id:"holiday",label:"Holiday Custody",description:"Having kids on holidays"},{id:"summer",label:"Summer Custody",description:"Extended summer time"},{id:"school",label:"School Events",description:"Attending school events"},{id:"medical",label:"Medical Appointments",description:"Taking kids to doctor"}];(0,n.useEffect)(()=>{O()},[B]);let O=()=>{let e=new l(B),t=new o(e);r(e),h(t);let i=e.getNextRequiredComparison();u(i),p(e.getInferenceStats()),j([]),b(!1),y([]),C("inference"),S(null),I(""),P(null),i&&E(e,i)},E=(e,t)=>{let i=e.selector;if(i&&i.calculateComparisonValue){let e=i.calculateComparisonValue(t),s=i.estimateItemPosition?i.estimateItemPosition(t.left):"unknown",n=i.estimateItemPosition?i.estimateItemPosition(t.right):"unknown";I("Selected for median-seeking strategy. Estimated positions: ".concat(t.left.label," (").concat(s.toFixed?s.toFixed(1):s,"), ").concat(t.right.label," (").concat(n.toFixed?n.toFixed(1):n,"). Expected inferences: ").concat(e.transitiveInferences.toFixed(1)))}else I("Selected to maximize information gain")},Z=e=>{if(!i||!x)return;let t=x.left.id===e.id?x.right:x.left,s=i.recordComparison(e);y(i=>[...i,"".concat(e.label," > ").concat(t.label," (+").concat(s," inferences)")]);let n=i.getNextRequiredComparison();u(n),p(i.getInferenceStats()),n&&E(i,n),(!n||i.isInferenceComplete())&&(b(!0),C("sorting"),A())},A=()=>{a&&setTimeout(()=>{let e=a.sort(),t=a.getSortingConfidence();j(e),S(t),C("complete")},1e3)},M=()=>{O()},F=B.length*(B.length-1)/2;return(0,s.jsxs)("div",{className:"max-w-6xl mx-auto p-6 space-y-6",children:[(0,s.jsx)(d.Zp,{children:(0,s.jsxs)(d.aR,{children:[(0,s.jsx)(d.ZB,{children:"Ordinal Relationship Inference Optimization"}),(0,s.jsx)(d.BT,{children:"Experience how separating relationship inference from sorting reduces manual comparisons by 50%+"})]})}),(0,s.jsx)(d.Zp,{children:(0,s.jsx)(d.Wu,{className:"pt-6",children:(0,s.jsxs)("div",{className:"flex items-center justify-center space-x-8",children:[(0,s.jsxs)("div",{className:"flex items-center space-x-2 ".concat("inference"===w?"text-blue-600 font-semibold":"sorting"===w||"complete"===w?"text-green-600":"text-gray-400"),children:[(0,s.jsx)("div",{className:"w-8 h-8 rounded-full flex items-center justify-center text-white ".concat("inference"===w?"bg-blue-600":"sorting"===w||"complete"===w?"bg-green-600":"bg-gray-400"),children:"1"}),(0,s.jsx)("span",{children:"Relationship Inference"}),"inference"===w&&(0,s.jsx)("span",{className:"text-sm",children:"(Manual Input Required)"})]}),(0,s.jsx)("div",{className:"w-16 h-1 ".concat("sorting"===w||"complete"===w?"bg-green-600":"bg-gray-300")}),(0,s.jsxs)("div",{className:"flex items-center space-x-2 ".concat("sorting"===w?"text-blue-600 font-semibold":"complete"===w?"text-green-600":"text-gray-400"),children:[(0,s.jsx)("div",{className:"w-8 h-8 rounded-full flex items-center justify-center text-white ".concat("sorting"===w?"bg-blue-600":"complete"===w?"bg-green-600":"bg-gray-400"),children:"2"}),(0,s.jsx)("span",{children:"Automatic Sorting"}),"sorting"===w&&(0,s.jsx)("span",{className:"text-sm",children:"(No Manual Input)"})]})]})})}),(0,s.jsxs)("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-6",children:[(0,s.jsxs)(d.Zp,{children:[(0,s.jsxs)(d.aR,{children:[(0,s.jsx)(d.ZB,{children:"inference"===w?"Relationship Learning":"sorting"===w?"Automatic Sorting":"Complete!"}),(0,s.jsx)(d.BT,{children:"inference"===w?"Choose which item is more important to you":"sorting"===w?"Generating final order from learned relationships...":"Your preferences have been sorted optimally"})]}),(0,s.jsx)(d.Wu,{children:"inference"===w&&x?(0,s.jsxs)("div",{className:"space-y-4",children:[(0,s.jsxs)("div",{className:"grid grid-cols-1 gap-4",children:[(0,s.jsx)(c.$,{onClick:()=>Z(x.left),className:"h-auto p-4 text-left",variant:"outline",children:(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{className:"font-semibold",children:x.left.label}),(0,s.jsx)("div",{className:"text-sm text-muted-foreground",children:x.left.description})]})}),(0,s.jsx)("div",{className:"text-center text-muted-foreground",children:"vs"}),(0,s.jsx)(c.$,{onClick:()=>Z(x.right),className:"h-auto p-4 text-left",variant:"outline",children:(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{className:"font-semibold",children:x.right.label}),(0,s.jsx)("div",{className:"text-sm text-muted-foreground",children:x.right.description})]})})]}),R&&(0,s.jsxs)("div",{className:"text-xs text-muted-foreground p-2 bg-blue-50 rounded border",children:[(0,s.jsx)("strong",{children:"Why this comparison?"})," ",R]}),(0,s.jsx)(c.$,{onClick:M,variant:"outline",size:"sm",className:"w-full",children:"Reset Demo"})]}):"sorting"===w?(0,s.jsxs)("div",{className:"text-center py-8",children:[(0,s.jsx)("div",{className:"text-2xl mb-4",children:"\uD83E\uDD16"}),(0,s.jsx)("div",{className:"text-lg font-semibold mb-2",children:"Sorting Automatically..."}),(0,s.jsx)("div",{className:"text-muted-foreground mb-4",children:"Using learned relationships to generate final order"}),(0,s.jsx)(m.k,{value:100,className:"h-2"})]}):(0,s.jsxs)("div",{className:"text-center py-8",children:[(0,s.jsx)("div",{className:"text-2xl font-bold text-green-600 mb-2",children:"\uD83C\uDF89 Optimization Complete!"}),(0,s.jsx)("div",{className:"text-muted-foreground mb-4",children:g&&"Reduced manual comparisons by ".concat(g.efficiencyGain.toFixed(1),"%")}),k&&(0,s.jsxs)("div",{className:"text-sm text-muted-foreground mb-4",children:["Sorting confidence: ",k.confidence,"%",(0,s.jsx)("br",{}),k.reason]}),(0,s.jsx)(c.$,{onClick:M,children:"Try Again"})]})})]}),(0,s.jsxs)(d.Zp,{children:[(0,s.jsxs)(d.aR,{children:[(0,s.jsx)(d.ZB,{children:"Optimization Statistics"}),(0,s.jsx)(d.BT,{children:"See the efficiency gains from separated concerns"})]}),(0,s.jsx)(d.Wu,{children:g&&(0,s.jsxs)("div",{className:"space-y-4",children:[(0,s.jsxs)("div",{children:[(0,s.jsxs)("div",{className:"flex justify-between text-sm mb-1",children:[(0,s.jsx)("span",{children:"Relationship Discovery"}),(0,s.jsxs)("span",{children:[g.completionPercentage.toFixed(1),"%"]})]}),(0,s.jsx)(m.k,{value:g.completionPercentage,className:"h-2"}),(0,s.jsxs)("div",{className:"text-xs text-muted-foreground mt-1",children:[g.totalRelationships," of ",F," relationships known"]})]}),(0,s.jsxs)("div",{className:"grid grid-cols-2 gap-4 text-sm",children:[(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{className:"font-semibold",children:"Manual Comparisons"}),(0,s.jsx)("div",{className:"text-2xl font-bold text-blue-600",children:g.manualComparisons}),(0,s.jsxs)("div",{className:"text-xs text-muted-foreground",children:["vs ",F," naive"]})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{className:"font-semibold",children:"Auto Inferences"}),(0,s.jsx)("div",{className:"text-2xl font-bold text-green-600",children:g.inferredRelationships}),(0,s.jsx)("div",{className:"text-xs text-muted-foreground",children:"via transitivity"})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{className:"font-semibold",children:"Efficiency Gain"}),(0,s.jsxs)("div",{className:"text-2xl font-bold text-purple-600",children:[g.efficiencyGain.toFixed(1),"%"]}),(0,s.jsx)("div",{className:"text-xs text-muted-foreground",children:"reduction in manual work"})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{className:"font-semibold",children:"Phase"}),(0,s.jsx)("div",{className:"text-lg font-bold text-orange-600",children:"inference"===w?"Learning":"sorting"===w?"Sorting":"Done"}),(0,s.jsx)("div",{className:"text-xs text-muted-foreground",children:"inference"===w?"manual input":"automatic"})]})]})]})})]})]}),(0,s.jsxs)("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-6",children:[(0,s.jsxs)(d.Zp,{children:[(0,s.jsxs)(d.aR,{children:[(0,s.jsx)(d.ZB,{children:"Learning History"}),(0,s.jsx)(d.BT,{children:"Your choices and automatic inferences"})]}),(0,s.jsx)(d.Wu,{children:(0,s.jsx)("div",{className:"space-y-2 max-h-64 overflow-y-auto",children:N.length>0?N.map((e,t)=>(0,s.jsxs)("div",{className:"text-sm p-2 bg-muted rounded flex justify-between",children:[(0,s.jsx)("span",{children:e}),(0,s.jsxs)("span",{className:"text-muted-foreground",children:["#",t+1]})]},t)):(0,s.jsx)("div",{className:"text-muted-foreground text-center py-4",children:"No comparisons made yet"})})})]}),(0,s.jsxs)(d.Zp,{children:[(0,s.jsxs)(d.aR,{children:[(0,s.jsx)(d.ZB,{children:"Final Ranking"}),(0,s.jsx)(d.BT,{children:"complete"===w?"Your optimized preference order":"Will appear after sorting"})]}),(0,s.jsx)(d.Wu,{children:(0,s.jsx)("div",{className:"space-y-2",children:f.length>0?f.map((e,t)=>(0,s.jsxs)("div",{className:"flex items-center gap-3 p-2 bg-muted rounded",children:[(0,s.jsx)("div",{className:"w-6 h-6 rounded-full bg-primary text-primary-foreground text-xs flex items-center justify-center font-bold",children:t+1}),(0,s.jsxs)("div",{className:"flex-1",children:[(0,s.jsx)("div",{className:"font-medium",children:e.label}),(0,s.jsx)("div",{className:"text-xs text-muted-foreground",children:e.description})]})]},e.id)):(0,s.jsx)("div",{className:"text-muted-foreground text-center py-8",children:"inference"===w?"Complete relationship learning to see final ranking":"sorting"===w?"Generating ranking...":"No ranking available"})})})]})]}),(0,s.jsxs)(d.Zp,{children:[(0,s.jsx)(d.aR,{children:(0,s.jsx)(d.ZB,{children:"How Separated Concerns Optimization Works"})}),(0,s.jsx)(d.Wu,{children:(0,s.jsxs)("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm",children:[(0,s.jsxs)("div",{children:[(0,s.jsx)("h4",{className:"font-semibold mb-2",children:"\uD83C\uDFAF Phase 1: Relationship Inference"}),(0,s.jsx)("p",{className:"text-muted-foreground",children:"Only ask for manual input when needed to learn new relationships. Use transitivity (A > B, B > C → A > C) to infer others automatically."})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h4",{className:"font-semibold mb-2",children:"\uD83E\uDD16 Phase 2: Automatic Sorting"}),(0,s.jsx)("p",{className:"text-muted-foreground",children:"Once sufficient relationships are known, generate the final ordering automatically using topological sorting - no more manual input needed."})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h4",{className:"font-semibold mb-2",children:"\uD83D\uDCCA Efficiency Gains"}),(0,s.jsx)("p",{className:"text-muted-foreground",children:"Achieve 50%+ reduction in manual comparisons compared to naive approaches. Larger item sets see even greater efficiency improvements."})]})]})})]})]})}function x(){return(0,s.jsx)("div",{className:"min-h-screen bg-background",children:(0,s.jsx)(h,{})})}}},e=>{var t=t=>e(e.s=t);e.O(0,[212,796,441,684,358],()=>t(6427)),_N_E=e.O()}]);