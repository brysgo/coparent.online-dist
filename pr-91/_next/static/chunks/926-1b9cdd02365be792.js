"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[926],{844:(e,r,t)=>{t.d(r,{GY:()=>c,h9:()=>s,hV:()=>o});var a=t(9509);function n(){let e=i();return"main"===e||"master"===e||"production"===e?"production":"development"}function i(){return"copilot/fix-82"}function s(){if("production"===n())return{url:a.env.NEXT_PUBLIC_SUPABASE_URL||"https://placeholder.supabase.co",anonKey:a.env.NEXT_PUBLIC_SUPABASE_ANON_KEY||"placeholder-anon-key",serviceRoleKey:a.env.SUPABASE_SERVICE_ROLE_KEY||"placeholder-service-role-key"};{let e=a.env.SUPABASE_DEV_URL||"https://bqiapoplmkkrtnsmmxhs.supabase.co";return{url:e,anonKey:a.env.SUPABASE_DEV_ANON_KEY||"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJxaWFwb3BsbWtrcnRuc21teGhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI0NDA3OTMsImV4cCI6MjA2ODAxNjc5M30.bZGNGvb8XYZSWkbfMYMNBAzoedp4SGOIerHmNcRqUsk",serviceRoleKey:a.env.SUPABASE_DEV_SERVICE_ROLE_KEY||"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJxaWFwb3BsbWtrcnRuc21teGhzIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MjQ0MDc5MywiZXhwIjoyMDY4MDE2NzkzfQ.7m9y2vqrq1Sd8bX6dl6A47WQbZoQHGKc7o2rzrcTjKI"}}}function o(e){return"https://placeholder.supabase.co"!==e.url&&"placeholder-anon-key"!==e.anonKey&&(e.url.includes("supabase.co")||e.url.includes("127.0.0.1"))}function c(){let e=i(),r=n(),t=s(),a=o(t);return{currentBranch:e,environment:r,supabaseUrl:t.url,hasValidConfig:a,configSource:"production"===r?"production":"development-default"}}},2099:(e,r,t)=>{t.d(r,{k:()=>s});var a=t(4982),n=t(844);let i=null,s=()=>{if(i)return i;let e=(0,n.h9)();return i=(0,n.hV)(e)?(0,a.UU)(e.url,e.anonKey,{auth:{autoRefreshToken:!0,persistSession:!0,storage:window.localStorage,detectSessionInUrl:!0}}):(0,a.UU)("https://placeholder.supabase.co","placeholder-anon-key",{auth:{autoRefreshToken:!0,persistSession:!0,storage:window.localStorage,detectSessionInUrl:!0}})}},7926:(e,r,t)=>{t.d(r,{t:()=>i});var a=t(2099);class n{async getUserPreferences(e,r){try{let{data:t,error:a}=await this.supabase.from("day_preferences").select("*").eq("parent_id",e).eq("relationship_id",r).order("priority",{ascending:!0});if(a)throw a;let{data:n,error:i}=await this.supabase.from("date_preferences").select("*").eq("parent_id",e).eq("relationship_id",r).order("priority",{ascending:!0});if(i)throw i;let{data:s,error:o}=await this.supabase.from("handoff_times").select("*").eq("relationship_id",r).order("time",{ascending:!0});if(o)throw o;return{dayPreferences:t||[],datePreferences:n||[],handoffTimes:s||[]}}catch(e){if(console.error("PreferenceService: Error fetching user preferences:",e),e instanceof Error&&(e.message.includes("Failed to fetch")||e.message.includes("Network")))throw Error("Network error. Please check your internet connection and try again.");throw Error("Failed to fetch user preferences. Please try again later.")}}async saveDayPreferences(e,r,t){try{let{error:a}=await this.supabase.from("day_preferences").delete().eq("parent_id",e).eq("relationship_id",r);if(a)throw a;let n=t.map(t=>({relationship_id:r,parent_id:e,day_of_week:t.dayOfWeek,priority:t.priority})),{data:i,error:s}=await this.supabase.from("day_preferences").insert(n).select();if(s)throw s;return i||[]}catch(e){throw console.error("Error saving day preferences:",e),Error("Failed to save day preferences")}}async saveDatePreferences(e,r,t){try{let{error:a}=await this.supabase.from("date_preferences").delete().eq("parent_id",e).eq("relationship_id",r);if(a)throw a;let n=t.map(t=>({relationship_id:r,parent_id:e,date:t.date,priority:t.priority})),{data:i,error:s}=await this.supabase.from("date_preferences").insert(n).select();if(s)throw s;return i||[]}catch(e){throw console.error("Error saving date preferences:",e),Error("Failed to save date preferences")}}async saveHandoffTimePreferences(e,r){try{let{error:t}=await this.supabase.from("handoff_times").delete().eq("relationship_id",e);if(t)throw t;let a=r.map(r=>({relationship_id:e,time:r.time,priority_parent_a:r.priorityParentA,priority_parent_b:r.priorityParentB})),{data:n,error:i}=await this.supabase.from("handoff_times").insert(a).select();if(i)throw i;return n||[]}catch(e){throw console.error("Error saving handoff time preferences:",e),Error("Failed to save handoff time preferences")}}async getRelationshipPreferenceSummary(e){try{let{data:r,error:t}=await this.supabase.from("co_parent_relationships").select("parent_a_id, parent_b_id").eq("id",e).single();if(t)throw t;let a=await this.getUserPreferenceSummary(r.parent_a_id,e),n=await this.getUserPreferenceSummary(r.parent_b_id,e);return{parentA:a,parentB:n}}catch(e){return console.error("Error fetching relationship preference summary:",e),{parentA:null,parentB:null}}}async getUserPreferenceSummary(e,r){try{let t=await this.getUserPreferences(e,r),a=t.dayPreferences.sort((e,r)=>e.priority-r.priority).map(e=>e.day_of_week),n=t.handoffTimes.map(t=>({time:t.time,priority:e===r?t.priority_parent_a:t.priority_parent_b})).sort((e,r)=>e.priority-r.priority).map(e=>e.time),i=t.datePreferences.sort((e,r)=>e.priority-r.priority).map(e=>e.date),s=[...t.dayPreferences.map(e=>e.updated_at),...t.datePreferences.map(e=>e.updated_at),...t.handoffTimes.map(e=>e.updated_at)],o=s.length>0?s.sort().reverse()[0]:new Date().toISOString();return{userId:e,relationshipId:r,preferredDays:a,preferredTimes:n,importantDates:i,lastUpdated:o}}catch(e){return console.error("Error getting user preference summary:",e),null}}async hasPreferences(e,r){try{let t=await this.getUserPreferences(e,r);return t.dayPreferences.length>0||t.datePreferences.length>0||t.handoffTimes.length>0}catch(e){return console.error("Error checking if preferences exist:",e),!1}}async getPreferenceConflicts(e){try{let r=await this.getRelationshipPreferenceSummary(e);if(!r.parentA||!r.parentB)return{dayConflicts:[],timeConflicts:[],dateConflicts:[]};let t=[];for(let e=0;e<=6;e++){let a=r.parentA.preferredDays.indexOf(e),n=r.parentB.preferredDays.indexOf(e);-1!==a&&-1!==n&&a<3&&n<3&&t.push({day:e,parentAPrefs:a+1,parentBPrefs:n+1})}let a=[];for(let e of r.parentA.preferredTimes.filter(e=>r.parentB.preferredTimes.includes(e))){let t=r.parentA.preferredTimes.indexOf(e),n=r.parentB.preferredTimes.indexOf(e);a.push({time:e,parentAPrefs:t+1,parentBPrefs:n+1})}let n=[];for(let e of r.parentA.importantDates.filter(e=>r.parentB.importantDates.includes(e)))n.push({date:e,bothWant:!0});return{dayConflicts:t,timeConflicts:a,dateConflicts:n}}catch(e){return console.error("Error analyzing preference conflicts:",e),{dayConflicts:[],timeConflicts:[],dateConflicts:[]}}}constructor(e=!1){e?this.supabase=null:this.supabase=(0,a.k)()}}let i=new n}}]);